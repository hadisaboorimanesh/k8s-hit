# https://www.haproxy.com/documentation/hapee/latest/onepage/#home
global
    log /dev/log local0
    log /dev/log local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # Increase the maximum number of connections
    maxconn 500000

    # Enable CPU-based scheduling
    cpu-map auto:1/1-8 0-7
    # nbproc 4
    nbthread 8

    # Default SSL material locationsh
    #ca-base /etc/ssl/certs/
    #crt-base /etc/ssl/certs/

    # Default ciphers to use on SSL-enabled listening sockets.
    # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets


defaults
    log global
    option httplog
    #option tcplog
    #log-format "%ci:%cp [%t] %ft %b/%s %TR/%Tw/%Tc/%Tr/%Tt %ST %B %tsc %{+Q}r"
    option dontlognull
    option http-server-close
    option forwardfor except 127.0.0.0/8
    # option redispatch

    # Timeouts
    timeout http-request 10s
    timeout queue 2m
    timeout connect 10s
    timeout client 2m
    timeout server 2m
    timeout http-keep-alive 10s
    timeout check 10s
    timeout tunnel 4h  # for websocket

    # Connection limits
    maxconn 500000
    retries 3
    default-server maxconn 10000 inter 2s fall 3 rise 2

    # Error files
    errorfile 400 /etc/haproxy/errors/400.http
    errorfile 403 /etc/haproxy/errors/403.http
    errorfile 408 /etc/haproxy/errors/408.http
    errorfile 500 /etc/haproxy/errors/500.http
    errorfile 502 /etc/haproxy/errors/502.http
    errorfile 503 /etc/haproxy/errors/503.http
    errorfile 504 /etc/haproxy/errors/504.http

frontend http-in
    bind :80
    mode http
    # HTTP to HTTPS redirect
    redirect scheme https code 301

frontend https-in
    # Bind all SSL certificates from the certs directory
    bind :443 ssl crt /etc/haproxy/certs/ alpn h2,http/1.1 strict-sni
    mode http
    option forwardfor

    # Set X-Forwarded-Proto to HTTPS for TLS-terminated requests
    http-request set-header X-Forwarded-Proto https

    # Security headers
    http-response set-header Strict-Transport-Security max-age=31536000
    http-response set-header X-Frame-Options SAMEORIGIN
    http-response set-header X-XSS-Protection "1; mode=block"
    http-response set-header X-Content-Type-Options nosniff

   # http-request set-header X-Real-IP %[src]

    # Rate limiting
   # stick-table type ip size 1m expire 15m store http_req_rate(10s)
   # http-request track-sc0 src table https-in
   # http-request deny deny_status 429 if { sc_http_req_rate(0) gt 10000 }


    # Compression
   # compression algo gzip
   # compression type text/html text/plain text/css application/javascript application/json


    ### ACLs ###

    # Tapsi.shop endpoints (Production)
    acl HOST-TAPSI hdr(host) -i tapsi.shop
   # acl HOST-TAPSI hdr(host) -i apm-server.tapsi.shop
    acl HOST-TAPSI hdr(host) -i chatbot.tapsi.shop
    acl HOST-TAPSI hdr(host) -i chatbotgw.tapsi.shop
    acl HOST-TAPSI hdr(host) -i admin.tapsi.shop
    acl HOST-TAPSI hdr(host) -i preadmin.tapsi.shop
    acl HOST-TAPSI hdr(host) -i www.tapsi.shop
    acl HOST-TAPSI hdr(host) -i prestage.tapsi.shop
    acl HOST-TAPSI hdr(host) -i vendor.tapsi.shop
    acl HOST-TAPSI hdr(host) -i prevendor.tapsi.shop
    acl HOST-TAPSI hdr(host) -i vendorws.tapsi.shop
    acl HOST-TAPSI hdr(host) -i admingw.tapsi.shop
    acl HOST-TAPSI hdr(host) -i ids.tapsi.shop
   # acl HOST-TAPSI hdr(host) -i chat.tapsi.shop
    acl HOST-TAPSI hdr(host) -i mobile.tapsi.shop
    acl HOST-TAPSI hdr(host) -i payment.tapsi.shop
    acl HOST-TAPSI hdr(host) -i paymentcb.tapsi.shop
    acl HOST-TAPSI hdr(host) -i report.tapsi.shop
    acl HOST-TAPSI hdr(host) -i qcommercegw.tapsi.shop
    acl HOST-TAPSI hdr(host) -i superadmin.tapsi.shop
    acl HOST-TAPSI hdr(host) -i vendorgw.tapsi.shop
    acl HOST-TAPSI hdr(host) -i sentry.tapsi.shop
    acl HOST-TAPSI hdr(host) -i consul.tapsi.shop
    acl HOST-TAPSI hdr(host) -i kibana.tapsi.shop
    acl HOST-TAPSI hdr(host) -i jaeger.tapsi.shop
    acl HOST-TAPSI hdr(host) -i n8n.tapsi.shop
    acl HOST-TAPSI hdr(host) -i rabbitmq.tapsi.shop
    acl HOST-TAPSI hdr(host) -i rabbitmq-ws.tapsi.shop

    # Hasti.co endpoints (Production)
    acl HOST-TAPSI hdr(host) -i argocd.hasti.co
    #acl HOST-TAPSI hdr(host) -i elasticsearch.hasti.co
    acl HOST-TAPSI hdr(host) -i apisearch.hasti.co
    acl HOST-TAPSI hdr(host) -i minio-k8s-api.hasti.co
    acl HOST-TAPSI hdr(host) -i minio-k8s.hasti.co
    acl HOST-TAPSI hdr(host) -i alertmanager-k8s.hasti.co
    acl HOST-TAPSI hdr(host) -i grafana-k8s.hasti.co
    acl HOST-TAPSI hdr(host) -i thanos-k8s.hasti.co
    acl HOST-TAPSI hdr(host) -i thanos-ruler-k8s.hasti.co
    acl HOST-TAPSI hdr(host) -i redis-stage.hasti.co

    acl HOST-TAPSI hdr(host) -i kapsi.tapsi.shop

    # Dev and Test endpoints (Stage)
    acl HOST-STAGE hdr(host) -i chatbot-test.hasti.co
    acl HOST-STAGE hdr(host) -i chatbotgw-test.hasti.co
    acl HOST-STAGE hdr(host) -i commercegw-test.hasti.co
    acl HOST-STAGE hdr(host) -i commercegw-test.hasti.co
    acl HOST-STAGE hdr(host) -i admin-test.hasti.co
    acl HOST-STAGE hdr(host) -i commerce-test.hasti.co
    acl HOST-STAGE hdr(host) -i vendor-test.hasti.co
    acl HOST-STAGE hdr(host) -i vendorws-test.hasti.co
    acl HOST-STAGE hdr(host) -i admingw-test.hasti.co
    acl HOST-STAGE hdr(host) -i admingw-test.hasti.co
    acl HOST-STAGE hdr(host) -i ids-test.hasti.co
    acl HOST-STAGE hdr(host) -i ids-test.hasti.co
    acl HOST-STAGE hdr(host) -i ids-test.hasti.co
    acl HOST-STAGE hdr(host) -i idr-test.hasti.co
    acl HOST-STAGE hdr(host) -i internalservice-test.hasti.co
    acl HOST-STAGE hdr(host) -i mongodb-test.hasti.co
    acl HOST-STAGE hdr(host) -i payment-test.hasti.co
    acl HOST-STAGE hdr(host) -i paymentcb-test.hasti.co
    acl HOST-STAGE hdr(host) -i qcommercegw-test.hasti.co
    acl HOST-STAGE hdr(host) -i qcommercegw-test.hasti.co
    acl HOST-STAGE hdr(host) -i rabbitmq-test.hasti.co
    acl HOST-STAGE hdr(host) -i rabbitmq-ws-test.hasti.co
    acl HOST-STAGE hdr(host) -i rasa-test.hasti.co
    acl HOST-STAGE hdr(host) -i redis-test.hasti.co
    acl HOST-STAGE hdr(host) -i superadmin-test.hasti.co
    acl HOST-STAGE hdr(host) -i vendorgw-test.hasti.co
    acl HOST-STAGE hdr(host) -i vendorgw-test.hasti.co
    acl HOST-STAGE hdr(host) -i n8n-test.hasti.co

    acl HOST-STAGE hdr(host) -i chatbot-develop.hasti.co
    acl HOST-STAGE hdr(host) -i chatbotgw-develop.hasti.co
    acl HOST-STAGE hdr(host) -i commercegw-develop.hasti.co
    acl HOST-STAGE hdr(host) -i commercegw-develop.hasti.co
    acl HOST-STAGE hdr(host) -i admin-develop.hasti.co
    acl HOST-STAGE hdr(host) -i commerce-develop.hasti.co
    acl HOST-STAGE hdr(host) -i vendor-develop.hasti.co
    acl HOST-STAGE hdr(host) -i vendorws-develop.hasti.co
    acl HOST-STAGE hdr(host) -i admingw-develop.hasti.co
    acl HOST-STAGE hdr(host) -i admingw-develop.hasti.co
    acl HOST-STAGE hdr(host) -i ids-develop.hasti.co
    acl HOST-STAGE hdr(host) -i ids-develop.hasti.co
    acl HOST-STAGE hdr(host) -i ids-develop.hasti.co
    acl HOST-STAGE hdr(host) -i internalservice-develop.hasti.co
    acl HOST-STAGE hdr(host) -i mongodb-develop.hasti.co
    acl HOST-STAGE hdr(host) -i payment-develop.hasti.co
    acl HOST-STAGE hdr(host) -i paymentcb-develop.hasti.co
    acl HOST-STAGE hdr(host) -i qcommercegw-develop.hasti.co
    acl HOST-STAGE hdr(host) -i qcommercegw-develop.hasti.co
    acl HOST-STAGE hdr(host) -i rabbitmq-develop.hasti.co
    acl HOST-STAGE hdr(host) -i rabbitmq-ws-develop.hasti.co
    acl HOST-STAGE hdr(host) -i rasa-develop.hasti.co
    acl HOST-STAGE hdr(host) -i redis-develop.hasti.co
    acl HOST-STAGE hdr(host) -i superadmin-develop.hasti.co
    acl HOST-STAGE hdr(host) -i vendorgw-develop.hasti.co
    acl HOST-STAGE hdr(host) -i vendorgw-develop.hasti.co
    acl HOST-STAGE hdr(host) -i n8n-develop.hasti.co

    acl HOST-STAGE hdr(host) -i consul.hasti.co
    acl HOST-STAGE hdr(host) -i apm-server.hasti.co
    acl HOST-STAGE hdr(host) -i elasticsearch-stage.hasti.co
    acl HOST-STAGE hdr(host) -i kibana.hasti.co
    acl HOST-STAGE hdr(host) -i apisearch-demo.hasti.co
    acl HOST-STAGE hdr(host) -i mongodb-stage-test.hasti.co
    acl HOST-STAGE hdr(host) -i jaeger.hasti.co
    acl HOST-STAGE hdr(host) -i minio-stage-api.hasti.co
    acl HOST-STAGE hdr(host) -i minio-stage.hasti.co
    acl HOST-STAGE hdr(host) -i alertmanager-stage.hasti.co
    acl HOST-STAGE hdr(host) -i grafana-stage.hasti.co
    acl HOST-STAGE hdr(host) -i nginx.hasti.co
    acl HOST-STAGE hdr(host) -i thanos-ruler-stage.hasti.co
    acl HOST-STAGE hdr(host) -i thanos-stage.hasti.co


    # Nexus servers
    acl HOST-Nexus hdr(host) -i nexus.hasti.co

    acl HOST-Nx hdr(host) -i nx.hasti.co
    acl HOST-NxDocker hdr(host) -i docker.hasti.co
    acl HOST-NxDockerProxy hdr(host) -i docker-proxy.hasti.co


    # Dartil.com endpoints
   # acl HOST-TAPSI hdr(host) -i dartil.com
   # acl HOST-TAPSI hdr(host) -i www.dartil.com
   # acl HOST-TAPSI hdr(host) -i pwa.dartil.com
   # acl HOST-TAPSI hdr(host) -i chatbot.dartil.com
   # acl HOST-TAPSI hdr(host) -i chatbotgw.dartil.com
   # acl HOST-TAPSI hdr(host) -i admin.dartil.com
   # acl HOST-TAPSI hdr(host) -i vendor.dartil.com
   # acl HOST-TAPSI hdr(host) -i admingw.dartil.com
   # acl HOST-TAPSI hdr(host) -i ids.dartil.com
    acl HOST-TAPSI hdr(host) -i qcommercegw.dartil.com
   # acl HOST-TAPSI hdr(host) -i superadmin.dartil.com
   # acl HOST-TAPSI hdr(host) -i vendorgw.dartil.com

    # Stats endpoint
    acl Stats hdr(host) -i haproxy.tapsi.shop

    ### ACL to Backends ###
    use_backend HOST-TAPSI if HOST-TAPSI
    use_backend HOST-STAGE if HOST-STAGE
    use_backend HOST-Nexus if HOST-Nexus
    use_backend HOST-Nx if HOST-Nx
    use_backend HOST-NxDockerProxy if HOST-NxDockerProxy
    use_backend HOST-NxDocker if HOST-NxDocker
    use_backend Stats if Stats

frontend prometheus
  bind :8405
  mode http
  http-request use-service prometheus-exporter if { path /metrics }
  option socket-stats
  #no log

# Stats backend
backend Stats
    mode http
    stats enable
    stats uri /
    stats refresh 10s
    stats auth admin:admin
    stats hide-version
    stats show-node

# Nexus backend
backend HOST-Nexus
    mode http
    option forwardfor
   # http-request set-header X-Real-IP %[src]
   # http-request set-header X-Forwarded-For %[src]
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request set-header X-Forwarded-Proto https if { ssl_fc }
    server nexus 172.31.52.227:8081 check

backend HOST-Nx
    mode http
    option forwardfor
   # http-request set-header X-Real-IP %[src]
   # http-request set-header X-Forwarded-For %[src]
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request set-header X-Forwarded-Proto https if { ssl_fc }
    server nx 172.31.53.82:8081 check

backend HOST-NxDocker
    mode http
    option forwardfor
   # http-request set-header X-Real-IP %[src]
   # http-request set-header X-Forwarded-For %[src]
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request set-header X-Forwarded-Proto https if { ssl_fc }
    server docker 172.31.53.82:1081 check

backend HOST-NxDockerProxy
    mode http
    option forwardfor
   # http-request set-header X-Real-IP %[src]
   # http-request set-header X-Forwarded-For %[src]
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request set-header X-Forwarded-Proto https if { ssl_fc }
    server docker-proxy 172.31.53.82:1082 check

# the stage k8s cluster backends (Dev and Test endpoints)
backend HOST-STAGE
    mode http
    balance leastconn

    # Health checks for Kubernetes ingress
    option httpchk GET /healthz
    http-check expect status 200
    # Alternative TCP check if HTTP check doesn't work
    # option tcp-check

    # Rate limit per backend (10k RPS across all servers)
   # stick-table type integer size 1 expire 1m store http_req_rate(1s)
   # http-request track-sc1 int(1) table k8s_ingress
   # acl exceeds_rate sc_http_req_rate(1) gt 10000
   # http-request deny if exceeds_rate


    # Servers with their settings
    server k8sw01 172.31.59.35:443 ssl verify none check weight 100
    server k8sw02 172.31.59.36:443 ssl verify none check weight 100
    server k8sw03 172.31.59.37:443 ssl verify none check weight 100
    server k8sw04 172.31.59.38:443 ssl verify none check weight 100
    server k8sw05 172.31.59.39:443 ssl verify none check weight 100
    server k8sw06 172.31.59.40:443 ssl verify none check weight 100
    server k8sw07 172.31.59.41:443 ssl verify none check weight 100

backend HOST-TAPSI
    mode http
    balance leastconn

    # Health checks for Kubernetes ingress
    option httpchk GET /healthz
    http-check expect status 200
    # Alternative TCP check if HTTP check doesn't work
    # option tcp-check

    # Rate limit per backend (10k RPS across all servers)
   # stick-table type integer size 1 expire 1m store http_req_rate(1s)
   # http-request track-sc1 int(1) table k8s_ingress
   # acl exceeds_rate sc_http_req_rate(1) gt 10000
   # http-request deny if exceeds_rate


    # Servers with their settings
    server k8sw01 172.31.58.5:443 ssl verify none check weight 100
    server k8sw02 172.31.58.6:443 ssl verify none check weight 100
    server k8sw03 172.31.58.7:443 ssl verify none check weight 100
    server k8sw04 172.31.58.8:443 ssl verify none check weight 100
    server k8sw05 172.31.58.9:443 ssl verify none check weight 100
    server k8sw06 172.31.58.10:443 ssl verify none check weight 100
    server k8sw07 172.31.58.11:443 ssl verify none check weight 100
    server k8sw08 172.31.58.12:443 ssl verify none check weight 100
    server k8sw09 172.31.58.13:443 ssl verify none check weight 100
    server k8sw10 172.31.58.14:443 ssl verify none check weight 100
    server k8sw11 172.31.58.15:443 ssl verify none check weight 100
    server k8sw12 172.31.58.16:443 ssl verify none check weight 100
    server k8sw13 172.31.58.17:443 ssl verify none check weight 100
    server k8sw14 172.31.58.26:443 ssl verify none check weight 100
    server k8sw15 172.31.58.27:443 ssl verify none check weight 100
    server k8sw16 172.31.58.29:443 ssl verify none check weight 100

# LF - Last Line Enter
# Add Everything Above This Line