apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secret
  namespace: develop  
type: Opaque
data:
  # Base64 encoded MongoDB URI
  uri: bW9uZ29kYjovL3Jvb3Q6SWthNDNOYXRZNGtwN01DZ240QjlRUnVVMzh6TVQ5UERAbW9uZ29kYi1oZWFkbGVzczoyNzAxNy8/cmVwbGljYVNldD1yczAmcmVhZFByZWZlcmVuY2U9cHJpbWFyeSZjb25uZWN0VGltZW91dE1TPTEwMDAwJmF1dGhTb3VyY2U9YWRtaW4=
---
# Create a Secret for MinIO credentials
apiVersion: v1
kind: Secret
metadata:
  name: minio-credentials
  namespace: develop
type: Opaque
stringData:
  # Replace with your base64 encoded credentials
  MINIO_ACCESS_KEY: iCMVqomZoPCNyiQZ
  MINIO_SECRET_KEY: cO3GMORDkKuAkaN5z60HZMQ2ZoGe8oZz
---
# ConfigMap for backup script
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-backup-script
  namespace: develop  
data:
  MINIO_URL: http://minio.minio.svc.cluster.local:9000
  BUCKET_NAME: mongodb-develop-backups
  backup.sh: |
    #!/bin/bash

    
    BACKUP_DIR="/tmp"
    TIMESTAMP=$(date +%Y%m%d_%H%M%S)
    BACKUP_NAME="mongo_backup_${TIMESTAMP}.gz"
    MAX_RETRIES=5
    RETRY_DELAY=10
    mc alias set myminio ${MINIO_URL} ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY}
    echo "Starting backup process..."
    
    echo "Creating backup..."
    OPLOG_START=$(mongosh ${MONGODB_URI} --quiet --eval 'db.getSiblingDB("local").oplog.rs.find({}, {ts:1}).sort({$natural:-1}).limit(1).next().ts')
    echo $OPLOG_START
    echo $OPLOG_START > $BACKUP_DIR/oplog_position.txt
    mongodump --uri=$MONGODB_URI --archive="$BACKUP_DIR/$BACKUP_NAME" --gzip --oplog;
    echo "Backup created successfully: $BACKUP_NAME"
    mc cp "$BACKUP_DIR/$BACKUP_NAME" "myminio/${BUCKET_NAME}/full/"
    mc ilm rule add myminio/${BUCKET_NAME}/full/$BACKUP_NAME --expire-days "14"
    mc cp "$BACKUP_DIR/oplog_position.txt" myminio/${BUCKET_NAME}/full/
    rm -f "$BACKUP_DIR/$BACKUP_NAME"
    echo "Backup process completed"
    
  incremental-backup.sh: |
    #!/bin/bash
    
    TIMESTAMP=$(date +%Y%m%d_%H%M%S)
    BACKUP_NAME="mongo_backup_${TIMESTAMP}"
    BACKUP_DIR="/backup"
    
    
    mc alias set myminio ${MINIO_URL} ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY}
    mc cp "myminio/${BUCKET_NAME}/oplog/oplog_position.txt" "/tmp/oplog_position.txt"
    LAST_OPLOG_TS=$(cat /tmp/oplog_position.txt)
    echo "Last oplog timestamp: $LAST_OPLOG_TS"
    CURRENT_OPLOG=$(mongosh ${MONGODB_URI} --quiet --eval 'db.getSiblingDB("local").oplog.rs.find({}, {ts:1}).sort({$natural:-1}).limit(1).next().ts')
    echo $CURRENT_OPLOG > /tmp/oplog_position.txt
    echo "Backing up oplog from $LAST_OPLOG_TS to $CURRENT_OPLOG"
    # Extract the `t` and `i` values from the Timestamp object
    T_VALUE=$(echo $LAST_OPLOG_TS | grep -oP '(?<=t: )\d+')
    I_VALUE=$(echo $LAST_OPLOG_TS | grep -oP '(?<=i: )\d+')
    LAST_OPLOG_TS_EXTENDED_JSON="{\"\$timestamp\": {\"t\": $T_VALUE, \"i\": $I_VALUE}}"

    echo "Extended JSON format: $LAST_OPLOG_TS_EXTENDED_JSON" 
    mongodump --uri="${MONGODB_URI}" --gzip --archive="/tmp/oplog_${TIMESTAMP}.gz" --db=local --collection=oplog.rs  --query="{\"ts\": {\"\$gt\": $LAST_OPLOG_TS_EXTENDED_JSON}}"    
  

    mc cp  "/tmp/oplog_${TIMESTAMP}.gz" "myminio/${BUCKET_NAME}/oplog/"
    mc ilm rule add myminio/${BUCKET_NAME}/oplog/oplog_${TIMESTAMP}.gz --expire-days "7"
    mc cp "/tmp/oplog_position.txt" "myminio/${BUCKET_NAME}/oplog/"
    
    echo "Incremental backup complete"

---
# CronJob for scheduled backups
apiVersion: batch/v1
kind: CronJob
metadata:
  name: mongo-full-backup
  namespace: develop
spec:
  schedule: "30 3 * * 5"  # Run every Friday at 3:30 AM
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 2
  failedJobsHistoryLimit: 1    
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: backup
            image: docker.hasti.co/mongodb/mongodb-tools:latest  
            command: ["/scripts/backup.sh"]
            env:
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: uri
            - name: MINIO_URL
              valueFrom:
                configMapKeyRef:
                  name: mongo-backup-script
                  key: MINIO_URL
            - name: BUCKET_NAME
              valueFrom:
                configMapKeyRef:
                  name: mongo-backup-script
                  key: BUCKET_NAME              
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: MINIO_ACCESS_KEY
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: MINIO_SECRET_KEY
            volumeMounts:
            - name: backup-script
              mountPath: /scripts
              readOnly: true
          volumes:
          - name: backup-script
            configMap:
              name: mongo-backup-script
              defaultMode: 0755
          restartPolicy: OnFailure
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: mongo-incremental-backup
  namespace: develop
spec:
  schedule: "30 3 * * *"  # Run every day at 3:30 AM
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 2
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: backup
            image: docker.hasti.co/mongodb/mongodb-tools:latest 
            command: ["/scripts/incremental-backup.sh"]
            env:
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: uri
            - name: MINIO_URL
              value: "http://minio.minio.svc.cluster.local:9000"
            - name: BUCKET_NAME
              value: "mongodb-develop-backups"
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: MINIO_ACCESS_KEY
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: MINIO_SECRET_KEY
            volumeMounts:
            - name: backup-script
              mountPath: /scripts
              readOnly: true
          volumes:
          - name: backup-script
            configMap:
              name: mongo-backup-script
              defaultMode: 0755
          restartPolicy: OnFailure
